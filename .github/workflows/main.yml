name: 🙋‍♂️ Personal Metrics
on:
  # Schedule updates
  schedule: [{cron: "0 * * * *"}]
  # Lines below let you run workflow manually and on each commit
  push: 
    branches: "main"
  workflow_dispatch:
jobs:
  github-metrics:
    runs-on: ubuntu-latest
    steps:

      - name: 📅 Get Current Year
        run: |
          echo "CURRENT_YEAR=$(date +%Y)" >> $GITHUB_ENV

      - name: 🚀 Metrics
        uses: lowlighter/metrics@main
        with:
          filename: metrics.svg
          config_timezone: Asia/Shanghai
          config_padding: 6%, 10% # 6% width padding, 10% height padding
          token: ${{ secrets.METRICS_TOKEN }}
          output_action: none
          base: header, repositories
          config_order: base.header, isocalendar, base.repositories

          plugin_isocalendar: yes
          plugin_isocalendar_duration: half-year

          plugin_achievements: yes
          plugin_achievements_display: detailed
          plugin_achievements_secrets: yes
          plugin_achievements_threshold: C
          
          plugin_notable: yes
          plugin_notable_from: organization

      - name: 📅 Skyline
        uses: lowlighter/metrics@main
        with:
          filename: skyline.svg
          config_timezone: Asia/Shanghai
          config_padding: 6%, 10% # 6% width padding, 10% height padding
          token: ${{ secrets.METRICS_TOKEN }}
          output_action: none
          base: ''
          plugin_skyline: yes
          plugin_skyline_frames: 60
          plugin_skyline_quality: 1
          plugin_skyline_year: ${{ env.CURRENT_YEAR }}

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - run: |
          git checkout --orphan latest_branch
          git status
          ls -al
          git reset --hard
          sudo mv /metrics_renders/* .
          git add *.svg
          git status
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m "📊 Metrics"

          if git show-ref --quiet refs/heads/metrics; then
            git branch -D metrics
          fi

          git branch -m metrics
          git push -f origin metrics
